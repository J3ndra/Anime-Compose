plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk Sdk.compileSdk
    buildToolsVersion BuildTools.buildTools

    defaultConfig {
        minSdk Sdk.minSdk
        targetSdk Sdk.targetSdk
        versionCode Version.versionCode
        versionName Version.versionNumber

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = Jvm.version
    }
}

dependencies {

    implementation(project(":domain"))
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Kotlin.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Kotlin.coroutines}"
    implementation "javax.inject:javax.inject:${Jvm.inject}"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:${Network.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${Network.retrofit}"
    implementation "com.squareup.retrofit2:converter-scalars:${Network.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${Network.okhttpLogging}"

    // Room
    implementation "androidx.room:room-runtime:${AndroidX.room}"
    implementation "androidx.room:room-ktx:${AndroidX.room}"
    kapt "androidx.room:room-compiler:${AndroidX.room}"

    // Utils
    implementation "com.jakewharton.timber:timber:${Utils.timber}"

    // Testing
    testImplementation "junit:junit:${Testing.junit}"
    testImplementation "org.hamcrest:hamcrest-library:${Testing.hamcrest}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Kotlin.coroutines}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Kotlin.coroutines}"
    testImplementation "androidx.test:core:${Testing.androidxCore}"
    testImplementation "androidx.test.ext:junit:${Testing.junitExt}"
    testImplementation "androidx.arch.core:core-testing:${Testing.archCore}"
    testImplementation "androidx.room:room-testing:${AndroidX.room}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${Testing.mockWebServer}"
    testImplementation "org.mockito:mockito-core:${Testing.mockito}"
    testImplementation "com.google.dagger:hilt-android-testing:${Google.hilt}"
    kaptTest "com.google.dagger:hilt-compiler:${Google.hilt}"

    kaptAndroidTest "com.google.dagger:hilt-compiler:${Google.hilt}"
    androidTestImplementation "com.google.dagger:hilt-android-testing:${Google.hilt}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Kotlin.coroutines}"
    androidTestImplementation "androidx.test:core:${Testing.androidxCore}"
    androidTestImplementation "androidx.test:runner:${Testing.runner}" // AndroidJUnitRunner
    androidTestImplementation "androidx.test:rules:${Testing.rules}"  // JUnit Rules
    androidTestImplementation "androidx.test.ext:junit:${Testing.junitExt}" // Assertions
    androidTestImplementation "androidx.test.ext:truth:${Testing.truthExt}"
    androidTestImplementation "org.hamcrest:hamcrest-library:${Testing.hamcrest}"
    androidTestImplementation "androidx.arch.core:core-testing:${Testing.archCore}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Testing.espresso}"
}